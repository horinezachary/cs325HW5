function BreadthFirstSearch(Graph G, int HEAD){
  list queue;
  G[HEAD].visited = true;
  queue.push_back(HEAD);
  G[HEAD].length = 1;

  while(!queue.empty()) {
    int cur = queue.pop_front();
    for (i = 0 to cur.numEdges) {
      int NODE = cur.edge[i];
      if (NODE.visited == false) {
        NODE.visited = true;
        queue.push_back(NODE);
        NODE.length = cur.length+cur.edge[i].length;
        NODE.path = cur.path+cur;
      }
    }
  }
}
